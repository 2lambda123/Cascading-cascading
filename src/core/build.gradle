/*
 * Copyright (c) 2007-2012 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: '../testing.gradle'

mavenPomDir = "${buildDir}/poms/core"
archivesBaseName = 'cascading-core'

sourceSets {
  main {
    output.classesDir = new File("${buildDir}/classes/core")

    java {
      srcDir 'cascading'
    }

    resources {
      srcDir 'cascading'
    }
  }
}

dependencies {
  compile group: 'thirdparty', name: 'jgrapht-jdk1.6', version: '0.8.1'
  compile group: 'riffle', name: 'riffle', version: '0.1-dev'
  compile group: 'org.codehaus.janino', name: 'janino', version: '2.5.16'
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.6.1'
  runtime group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.6.1'
  runtime group: 'log4j', name: 'log4j', version: '1.2.16'
}

jar.doFirst {
  new File(buildDir, 'build.number.properties').write(buildNumber)
}

jar {
  into('cascading') {
    from '../../version.properties'
    from "${buildDir}/build.number.properties"
  }
}

assemble << {
  def distDir = mkdir("${buildDir}/dist")

  copy {
    into "${distDir}/lib/cascading-core"
    from(configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.findAll { dep ->
      !dep.name.contains('cascading')
    }.collect { dep ->
      dep.moduleArtifacts.collect { it.file }
    })
  }

  copy {
    into distDir
    from configurations.default.allArtifactFiles
  }
}

test {
  include '**/*Test.class'
  exclude '**/*PlatformTest.class'
  exclude '**/ComparePlatformsTest.class'

  systemProperties = setTestingProperties('core')

  testReportDir = new File(testReportDir, 'core')
  testResultsDir = new File(testResultsDir, 'core')
}
