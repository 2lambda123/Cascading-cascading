/*
 * Copyright (c) 2007-2011 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//project.getTestIncludes = { priorIncludes, matcher ->
//
//  if( priorIncludes.isEmpty() )
//  priorIncludes.add('**/*Test.class')
//
//  def includes = []
//
//  fileTree(dir: sourceSets.test.classesDir, includes: priorIncludes).each { File file ->
//
//    def text = new File(file.absolutePath.replaceAll(/.*build\/classes/) { project.file('..') }.replaceAll(/\.class$/) { '.java' }).getText()
//    if( text =~ matcher )
//    {
//      includes << file.absolutePath.replaceFirst("^${sourceSets.test.classesDir}") { '**' }
//    }
//  }
//
//  includes
//}

project.setTestingProperties = { platform = '' ->
  System.properties[ 'test.platform.includes' ] = platform

  if( !System.properties[ 'test.cluster.enabled' ] )
  {
    System.properties[ 'test.cluster.enabled' ] = 'true'
  }

  // hadoop hard codes 'build/test' into its test harness, so might as well play along
  System.properties[ 'test.output.root' ] = new String("${buildDir}/test/output/")
  System.properties[ 'test.data.path' ] = new String("${projectDir}/../test/data/")
  System.properties[ 'hadoop.log.dir' ] = new String("${buildDir}/test/log")
  System.properties[ 'hadoop.tmp.dir' ] = new String("${buildDir}/test/tmp")
  System.properties
}