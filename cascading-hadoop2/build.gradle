/*
 * Copyright (c) 2007-2013 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "${rootDir}/etc/hadoop-shared-config.gradle"

idea {
  pathVariables MODULE_DIR: file("${rootDir}/cascading-hadoop")
}

ext.hadoop2Version = '2.0.5-alpha'

if( System.properties[ 'hadoop2.release.final' ] )
  hadoopVersion = System.properties[ 'hadoop2.release.final' ]

dependencies {

  compile project( ':cascading-core' )

  testCompile project( path: ':cascading-core', configuration: 'testArtifacts' )
  testCompile project( path: ':cascading-platform', configuration: 'testArtifacts' )

  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-core', version: hadoop2Version )
  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-mapreduce-client-jobclient', version: hadoop2Version )
  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-hdfs', version: hadoop2Version )
  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-common', version: hadoop2Version )
  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-client', version: hadoop2Version )
  providedCompile( group: 'org.apache.hadoop', name: 'hadoop-annotations', version: hadoop2Version )

  testCompile( group: 'org.apache.hadoop', name: 'hadoop-minicluster', version: hadoop2Version )
}

test {
  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}

platformTest {
  forkEvery = 1 // static fields on the platform test get munged otherwise

  systemProperties[ 'hadoop.log.dir' ] = new String( "${buildDir}/test/log" )
  systemProperties[ 'hadoop.tmp.dir' ] = new String( "${buildDir}/test/tmp" )
  systemProperties[ 'test.build.data' ] = new String( "${buildDir}/test/data" )
}